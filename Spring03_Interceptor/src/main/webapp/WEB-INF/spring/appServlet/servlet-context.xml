<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc https://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd">

	<!-- DispatcherServlet Context: defines this servlet's request-processing infrastructure -->
	
	<!-- Enables the Spring MVC @Controller programming model -->
	<annotation-driven />

	<!-- Handles HTTP GET requests for /resources/** by efficiently serving up static resources in the ${webappRoot}/resources directory -->
	<!-- 
		모든 요청은 SpringDispatcherServlet을 거치도록 했는데 거기에서 배제할 파일에 대한 요청을 편하게 할 수 있도록 설정한 것이다.
		
		정적파일은 webapp/resources/ 폴더 안에 특정 경로에 넣어두고 사용하도록 되어있다.
		
		1. mapping="resources/**" location="/resources/" <<<이것이 기본 설정이다.
		  따라서, /resources/images/t9lion_trans.png를 client가 받아가기 위해서는
		  <img src="/spring03/resources/images/t9lion_trans.png">경로로 요청하면 된다.
		
		2. mapping="/**" location="/resources/"이렇게 변경하면
		  /resources/images/t9lion_trans.png를 client가 받아가기 위해서는
		  <img src="/spring03/images/t9lion_trans.png">경로로 요청하면 된다. (마치, resources안에 있는 것이 아니라 webapp 안에 있는 것처럼 사용 가능)
	 -->
	<resources mapping="/resources/**" location="/resources/" />

	<!-- Resolves views selected for rendering by @Controllers to .jsp resources in the /WEB-INF/views directory -->
	<beans:bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<beans:property name="prefix" value="/WEB-INF/views/" />
		<beans:property name="suffix" value=".jsp" />
	</beans:bean>
	
	<!-- MyInterceptor가 bean이 되도록 한다. -->
	<beans:bean id="myInterceptor" class="com.gura.spring03.Interceptor.MyInterceptor" />
	<beans:bean id="loginInterceptor" class="com.gura.spring03.Interceptor.LoginInterceptor"/>
	
	<!-- interceptor목록 -->
	<interceptors>
		<interceptor>
			<mapping path="/play"/>
			<beans:ref bean = "myInterceptor"/>
		</interceptor>
		<!-- /users/하위의 모든 요청에 대해 loginInterceptor가 끼어들도록 설정한다. -->
		<interceptor>
			<mapping path="/file/*"/>
			<mapping path="/users/*"/>
			<exclude-mapping path="/users/loginform"/>
			<exclude-mapping path="/users/login"/>
			<beans:ref bean = "loginInterceptor"/>
		</interceptor>
	</interceptors>
	
	<!-- 
		Multipart 폼 전송 처리를 위한 bean 설정
		최대 업로드 사이즈 제한하기
		name = "maxUploadSize" value="byte 단위"
	 -->
   	<beans:bean id="multipartResolver"
    	class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
      	<beans:property name="maxUploadSize" value="102400000"/> <!-- 여기선 연산자가 안먹힘. 숫자로 써줘야 한다. -->
   	</beans:bean>   
	
	<context:component-scan base-package="com.gura.spring03" />
	
</beans:beans>
